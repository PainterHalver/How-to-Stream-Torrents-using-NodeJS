<html>

	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Torrent Client</title>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
		<style type="text/css">
			body {
				font-family: monospace;
			}

			.url:hover {
    			text-decoration: underline;
    			cursor: pointer;
			}
		</style>

	</head>

	<body>

		<video autoplay src="" controls ></video>

		<p>Video source: <a id="video-src"></a> || <a id="vlc-src"></a> || <a id="nplayer-src"></a></p>

		<p>Samples Torrents:</p>

		<ul id="demo_magnets">
			<li><span class="magnet url">334f62943e694041a1eaa4bcd474956071240fdb</span> - <span>For The Love of Spock - Sneak Peak</span></li>
			<li><span class="magnet url">f76ad565160789101bf986ba582d29584d9fee67</span> - <span>SNOWDEN - Official Trailer</span></li>
			<li><span class="magnet url">6a9759bffd5c0af65319979fb7832189f4f3c35d</span> - <span>Sintel (Blender Open Movie Project) <a href="https://durian.blender.org" target="_blank">durian.blender.org</a></span></li>
			<li><span class="magnet url">6fd85ac1a2193167810da8c60e92604aedd70fe5</span> - <span>Samuel Proffitt - Depth ft. Naadia (Official Video)</span></li>
			<li><span class="magnet url">0edb493361daaf35a69571b4629202127431aaca</span> - <span>TRAD+ album experience: INTERFERENCE</span></li>
			<li><span class="magnet url">ec35ea4269c1b5613a0799d7a5c124e8478405ee</span> - <span>NUTS! <a href="http://www.nutsthefilm.com/" target="_blank">www.nutsthefilm.com</a></span></li>
		</ul>

		<p>Magnet Hash <input type="text" name="magnet" placeholder="Enter torrent URL." id="hash-input"> 
		<button id="load">Load</button><button id="paste">Paste From Clipboard</button></p>

		<p>Magnet Contents:</p>

		<ul id="content"></ul>

		<p>Client Magnets:</p>

		<ul id="magnets">
			<li>N/A</li>
		</ul>

		<p>Client Stats:</p>

		<ul id="stats">
			<li>Progress: 0%</li>
			<li>downloadSpeed: 0 Byte/s</li>
			<li>ratio: 0</li>
		</ul>

		<p>Client Errors:</p>

		<ul id="errors">
			<li>N/A</li>
		</ul>

	</body>

	<script>

	$(function() {
		var api = "{{base_url}}/video";
		client_magnet_list();
		check_for_client_stats();
		check_for_client_errors();

		$('#demo_magnets').on('click', '.magnet', function() {
			var magnet = $(this).text();
			$("input").removeAttr('placeholder');
			$("input").val(magnet)
			load();

		});

		$('#load').click(function() {
			load();
		});

		$('#paste').click(function() {
			navigator.clipboard.readText().then(text => {
				$("#hash-input").val(text);
			})
		});

		$('#content').on('click', '.file', function() {
			var magnet = $('input').val();
			var file_name = $(this).attr("data-name");
			$('video').attr('src', api + '/stream/' + magnet + "/" + file_name);

			// Display video source
			const rawSource = api + '/stream/' + magnet + "/" + file_name;
			$('#video-src').text("Raw Video Source");
			$('#video-src').attr("href", rawSource);
			$('#vlc-src').text("VLC Source");
			$('#vlc-src').attr("href", `vlc://${window.location.origin}${rawSource}`);
			$('#nplayer-src').text("nPlayer Source");
			$('#nplayer-src').attr("href", `nplayer://${window.location.origin}${rawSource}`);
		});

		$('#magnets').on('click', '.delete', function() {
			var magnet_hash = $(this).parent().attr("data-hash");
			$.get(api + "/delete/" + magnet_hash, function(data) {
			});

		});

		function load() {
			$('#load').prop('disabled', true);
			$("#content").empty();
			$("#content").append('<li>Loading...</li>');
			var magnet = $('input').val();

			if(!magnet)	{
				return console.error("No Magnet Hash");
			}

			$.get(api + '/add/' + magnet, function(data) {
				$("#content").empty();
				$.each(data, function(index, obj) {
					$("#content").append('<li class="file url" data-name="' + obj.name + '"><span class="url">'+ obj.name + '</span> (' + format_bytes(obj.length, 0) + ') <a href="' + api + '/stream/' + magnet + "/" + obj.name + '">SRC</a></li>');
				})
				$('#load').prop('disabled', false);
			});
		}

		// 	Get a list of Magnet Hashes that a client has. This method will be
		// 	executed in a loop every n amount of time to make sure the data is nice and fresh.
		function client_magnet_list(){
			setTimeout(function() {
				$.get(api + '/list', function(data) {
					$("#magnets").empty();
					if(data.length > 0){
						$.each(data, function(index, obj) {
							$("#magnets").append('<li data-hash="' + obj.hash + '"><span class="magnet">' + obj.hash + '</span> [<span class="delete url">Delete</span>]</li>');
						});
					}
					else{
						$("#magnets").append('<li>N/A</li>');
					}
					client_magnet_list();
				});
			}, 1000)
		}

		//	Make API request every n amount of time to get the status of the
		//	client so we can get a sense if the data is being downloaded or	not.
		function check_for_client_stats() {
			setTimeout(function() {
				$.get(api + '/stats', function(obj) {
					$("#stats").empty();
					var li = "<li>Progress: " + obj.progress + "%</li>" +
							 "<li>downloadSpeed: " + format_bytes(obj.downloadSpeed, 0) + "/s</li>" +
							 "<li>ratio: " + obj.ratio + "</li>";
					$("#stats").append(li);
				});
				check_for_client_stats();
			}, 1000);
		}

		//	Make API request every n amount of time to see if the client has some errors worth showing.
		function check_for_client_errors(){
			setTimeout(function() {
				$.get(api + '/errors', function(message) {
					if(message) {
						$("#errors").empty();
						$("#errors").append('<li class="error">' + message + '</li>');
					}
					check_for_client_errors();
				});
			}, 1000);
		}

	});

	//	Convert bytes to a human readable form
	function format_bytes(bytes, decimals)
	{
		if(bytes == 0)
		{
			return '0 Byte';
		}
		var k = 1024;
		var dm = decimals + 1 || 3;
		var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
		var i = Math.floor(Math.log(bytes) / Math.log(k));
		return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
	}

	</script>

</html>